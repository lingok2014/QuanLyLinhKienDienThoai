@model QuanLyLinhKienDienThoai.Models.SANPHAM

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/Layout/_Layout.cshtml";
}


@using (Html.BeginForm("Create", "SanPham", FormMethod.Post, new { @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">

            <div class="col-md-10">
                @Html.EditorFor(model => model.MASP, new { htmlAttributes = new { @class = "form-control", @type = "hidden" } })
                @Html.ValidationMessageFor(model => model.MASP, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.TENSP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TENSP, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TENSP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GIA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GIA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GIA, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-md-2">
                Ảnh:
            </label>
            <div class="col-md-10">
                <input type="file" name="fileUpload" placeholder="Chọn hình ảnh đại diện" />
                @ViewBag.ThongBao
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.THONGTIN, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.THONGTIN, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.THONGTIN, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SOLUONG, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SOLUONG, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SOLUONG, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MALOAISP, "MALOAISP", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MALOAISP", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MALOAISP, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MATHUONGHIEU, "MATHUONGHIEU", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MATHUONGHIEU", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MATHUONGHIEU, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="pull-left">
            <a href="@Url.Action("Index")" class="btn btn-warning">
                <span class="glyphicon glyphicon-remove"></span> Quay về
            </a>
        </div>

        <div class="pull-right">

            <button type="submit" class="btn btn-success margin-right">
                <span class="glyphicon glyphicon-save"></span> Lưu
            </button>

        </div>
    </div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
